generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique()
  username String @unique()
  country  String

  emoji String @default("üêµ")

  EnabledStreamingService EnabledStreamingService[]
  EnabledGenre            EnabledGenre[]

  createdAt                   DateTime            @default(now())
  connectionFirstUser         Connection[]        @relation("connection_first_user")
  connectionSecondUser        Connection[]        @relation("connection_second_user")
  connectionRequestFirstUser  ConnectionRequest[] @relation("connection_request_first_user")
  connectionRequestSecondUser ConnectionRequest[] @relation("connection_request_second_user")
}

model ConnectionRequest {
  id String @id @default(cuid())

  firstUserId  String
  secondUserId String

  firstUser  User @relation("connection_request_first_user", fields: [firstUserId], references: [id])
  secondUser User @relation("connection_request_second_user", fields: [secondUserId], references: [id])

  createdAt DateTime @default(now())


  @@unique([firstUserId, secondUserId])
}

model Connection {
  id String @id @default(cuid())

  firstUserId  String
  secondUserId String
  firstUser    User   @relation("connection_first_user", fields: [firstUserId], references: [id])
  secondUser   User   @relation("connection_second_user", fields: [secondUserId], references: [id])

  @@unique([firstUserId, secondUserId])
  @@map("Friend")
}

model EnabledGenre {
  id      String @id @default(cuid())
  genreId Int
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  @@unique([userId, genreId])
}

model EnabledStreamingService {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  //ID of the streaming service on TMDB
  streamingServiceId Int

  @@unique([userId, streamingServiceId])
}
